#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

[[ ${SHELL_TRACE} ]] && set -x
set -euo pipefail

BUILD_DIR=${1}
CACHE_DIR=${2}
BUILDPACK=$(cd $(dirname ${0})/..; pwd)
HEKA_TARGET=${BUILD_DIR}/heka
CONF_TARGET=${HEKA_TARGET}/conf
CONF_SRC=${BUILDPACK}/conf

: ${HEKA_VERSION:=0.10.0}
: ${HEKA_VERSION_UNDERSCORE:=$(echo "${HEKA_VERSION}" | tr '.' '_')}

HEKA_TGZ="/tmp/${HEKA_VERSION}.tgz"

${BUILDPACK}/compile-extensions/bin/check_stack_support

source ${BUILDPACK}/bin/common.sh

status "Downloading Heka ..."
export BUILDPACK_PATH=${BUILDPACK}
source ${BUILDPACK}/compile-extensions/lib/common

[ ! -s "${HEKA_TGZ}" ] && {
  curl --location -s \
    -o "${HEKA_TGZ}" \
    https://github.com/mozilla-services/heka/releases/download/v${HEKA_VERSION}/heka-${HEKA_VERSION_UNDERSCORE}-linux-amd64.tar.gz
}

status "Unpacking Heka ..."
mkdir -p ${CONF_TARGET} # /Should/ be moot ...
tar xfz ${HEKA_TGZ} --strip-components 1 -C ${HEKA_TARGET}

status "Configuring Heka ..."
for SRC in ${CONF_SRC}/*; do
  TARGET="${CONF_TARGET}/$(basename ${SRC})"
  [[ -r ${TARGET} ]] && cp -n ${SRC} ${TARGET}.overriden-heka-buildpack-default
  [[ -r ${TARGET} ]] || cp    ${SRC} ${TARGET}
done

cp -f ${BUILDPACK}/bin/run.sh ${HEKA_TARGET}/
